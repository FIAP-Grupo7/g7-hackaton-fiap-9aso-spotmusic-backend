# Nome do Workflow
name: Pipeline Hackathon Grupo 07

# Evento que irá acionar a pipeline
on: 
  push:
    branches:
      - main

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Download do Repositório
        uses: actions/checkout@v3     
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4   
        with:
          python-version: '3.10'

      - name: Install Requirements
        run:  pip install flask flask-wtf flask-cors PyMySQL cryptography gunicorn

      - name: Install Requirements
        run:  pip install coverage

      - name: Unit Test
        run: python -m unittest -v test

      - name: Coverage
        run:  coverage run -m unittest

      - name: Install tox and any other packages
        run: pip install tox

      - name: Run tox
        run: tox -e py

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Docker Login
        run: | 
          echo '${{ secrets.GOOGLE_CREDENTIALS }}' > key.json
          cat key.json | docker login -u _json_key --password-stdin '${{ vars.GOOGLE_ARTIFACT }}'

      - name: Build & Push Image
        run: |
          docker build -t ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest .
          docker push ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest 
  
  Deploy:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3 # https://github.com/actions/checkout

      - name: Auth GCP
        uses: 'google-github-actions/auth@v1' # https://github.com/google-github-actions/auth
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Cloud Run Deploy
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@v1'  # https://github.com/marketplace/actions/deploy-to-cloud-run
        with:
          service: ${{ vars.GOOGLE_MYAPP }}
          image:   ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest
          flags: '--allow-unauthenticated --add-cloudsql-instances=grupo-07:us-west1:main-instance'
          env_vars: | 
            CLOUD_SQL_USERNAME=${{ vars.CLOUD_SQL_USERNAME }}
            CLOUD_SQL_PASSWORD=${{ secrets.CLOUD_SQL_PASSWORD }}
            CLOUD_SQL_DATABASE_NAME=${{ vars.CLOUD_SQL_DATABASE_NAME }}
            DB_LOCAL_HOST=${{ vars.DB_LOCAL_HOST }}
            CLOUD_SQL_CONNECTION_NAME=${{ vars.CLOUD_SQL_CONNECTION_NAME }}
      
      - name: Test Prod
        run: 'curl "${{ steps.deploy.outputs.url }}"'